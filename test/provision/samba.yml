---
# Based on https://github.com/arbabnazar/ansible-roles
- name: Configure container with Samba
  hosts: container
  become: "yes"
  vars:
    samba_packages:
    - samba
    workgroup: WORKGROUP
    public_share_name: public
    public_share_path: /samba/public
    private_share_name: private
    private_share_path: /samba/private
    samba_group_name: smbgrp
    samba_users:
        - name: 'fluidasserts'
          smbpasswd: 'OhtheeTahghaeBienoh5quuaw'
  tasks:
    - name: Install the Samba and additional packages
      apt:
        name: "{{ item }}"
        state: installed
        update_cache: yes
      with_items: "{{ samba_packages }}"

    - name: Copy the Customize smb.conf file
      template:
        src: samba/etc_samba_smb.conf.j2
        dest: /etc/samba/smb.conf
        backup: yes
      notify:
        - restart samba

    - name: Create Samba users restricted group
      group:
        name: "{{ samba_group_name }}"
        state: present

    - name: Add the User(s) to Samba group
      user:
        name: "{{ item.name }}"
        groups: "{{ samba_group_name }}"
        append: yes
      with_items: "{{ samba_users }}"

    - name: Create Samba Password for User(s)
      shell: "(echo {{ item.smbpasswd }}; echo {{ item.smbpasswd }}) | smbpasswd -s -a {{ item.name }}"
      with_items: "{{ samba_users }}"

    - name: "Check that {{ public_share_path }} exist"
      stat:
        path: "{{ public_share_path }}"
      register: public_dir_exists

    - name: "Create {{ public_share_path }} directory"
      file:
        state: directory
        path: "{{ public_share_path }}"
        owner: nobody
        group: nogroup
        mode: 0755
        recurse: yes
      when: public_dir_exists.stat.exists == False

    - name: "Check that {{ private_share_path }} exist"
      stat:
        path: "{{ private_share_path }}"
      register: private_dir_exists

    - name: "Create {{ private_share_path }} directory"
      file:
        state: directory
        path: "{{ private_share_path }}"
        owner: root
        group: "{{ samba_group_name }}"
        mode: 1770
      when: private_dir_exists.stat.exists == False

    - name: restart samba
      service:
        name: "{{ item }}"
        state: restarted
      with_items:
        - nmbd
        - smbd

