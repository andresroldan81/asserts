---

image: registry.gitlab.com/fluidsignal/asserts:base

variables:
  DOCKER_DRIVER: overlay2

services:
  - docker:dind

before_script:
  - docker login registry.gitlab.com -u $DOCKER_USER -p $DOCKER_PASS
  - docker build
    --cache-from registry.gitlab.com/fluidsignal/asserts:base
    -f Dockerfile.base -t registry.gitlab.com/fluidsignal/asserts:base .

stages:
  - build
  - test
  - deploy
  - postdeploy
  - cleanup

build:
  stage: build
  before_script:
    - mkdir -p /tmp${CI_PROJECT_DIR}/${CI_COMMIT_SHA}
    - cp -a ${CI_PROJECT_DIR} /tmp${CI_PROJECT_DIR}/${CI_COMMIT_SHA}/src
  script:
    - docker build
      --cache-from registry.gitlab.com/fluidsignal/asserts:builder
      -f Dockerfile.builder -t registry.gitlab.com/fluidsignal/asserts:builder .
  retry: 2

lint:
  stage: test
  script:
    - docker-compose run lint
    - docker-compose run overcommit
  retry: 2
  except:
    - master

test:
  stage: test
  script:
    - docker-compose run test
  retry: 2

fluidasserts:
  script:
    - docker pull fluidattacks/asserts
    - docker run -e FA_STRICT="false" -w /code
      -v /tmp${CI_PROJECT_DIR}/${CI_COMMIT_SHA}/src:/code
      fluidattacks/asserts asserts /code/deploy/container/exploit.py
  except:
    - master

codequality:
  image: docker:latest
  variables:
    DOCKER_DRIVER: overlay
    SRC: /tmp${CI_PROJECT_DIR}/${CI_COMMIT_SHA}/src/fluidasserts
  services:
    - docker:dind
  script:
    - export SP_VERSION=$(echo "$CI_SERVER_VERSION" |
        sed 's/^\([0-9]*\)\.\([0-9]*\).*/\1-\2-stable/')
    - docker run
      -e SOURCE_CODE="$SRC"
      -v "$SRC":/code
      -v /var/run/docker.sock:/var/run/docker.sock
      "registry.gitlab.com/gitlab-org/security-products/codequality:$SP_VERSION"
      /code
#    - cp -f $SRC/codeclimate.json .
  retry: 2
  artifacts:
    paths: [codeclimate.json]
  except:
    - master

deploy:
  stage: deploy
  script:
    - docker-compose run deploy
    - docker build --no-cache -f Dockerfile.runner
      -t registry.gitlab.com/fluidsignal/asserts:runner .
    - docker build --no-cache
      -t fluid-docker.jfrog.io/$ORG:$APP deploy/container
  retry: 2
  only:
    - master

push_container:
  stage: postdeploy
  script:
    - docker login fluid-docker.jfrog.io -u $JFROG_USER -p $JFROG_PASS
    - docker login -u $HUB_USER -p $HUB_PASS
    - docker push registry.gitlab.com/fluidsignal/asserts:base
    - docker push registry.gitlab.com/fluidsignal/asserts:builder
    - docker push registry.gitlab.com/fluidsignal/asserts:runner
    - docker tag registry.gitlab.com/fluidsignal/asserts:runner
      fluidattacks/asserts
    - docker push fluidattacks/asserts
    - docker push fluid-docker.jfrog.io/$ORG:$APP
  after_script:
    - rm -rf /tmp${CI_PROJECT_DIR}/${CI_COMMIT_SHA}
  retry: 2
  only:
    - master

pages:
  image: registry.gitlab.com/fluidsignal/asserts:builder
  stage: deploy
  script:
    - scons sphinxdoc
  artifacts:
    paths: [public/]
  only:
    - master

cleanup_job:
  stage: cleanup
  script:
    - rm -rf /tmp${CI_PROJECT_DIR}/${CI_COMMIT_SHA}
  when: always
