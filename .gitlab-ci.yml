---

image: docker:18

variables:
  DOCKER_DRIVER: overlay2

services:
  - docker:dind

before_script:
  - docker login registry.gitlab.com -u $DOCKER_USER -p $DOCKER_PASS

stages:
  - build
  - test
  - mr-check
  - deploy
  - postdeploy
  - cleanup
  - remove-branches

build:
  stage: build
  script:
    - docker build
      --cache-from registry.gitlab.com/fluidattacks/asserts:builder
      -f Dockerfile.builder -t registry.gitlab.com/fluidattacks/asserts:builder .
  retry: 2

commitlint:
  image: starefossen/ruby-node:2-10
  stage: test
  before_script:
    - npm install
  script:
    - ./ci-scripts/commitlint-checks.sh
  except:
    - master
    - schedules

lint:
  image: registry.gitlab.com/fluidattacks/asserts:builder
  stage: test
  script:
    - scons lint
    - overcommit -s && overcommit -s pre-commit && overcommit -r
  retry: 2
  except:
    - master
    - schedules

bandit:
  image: registry.gitlab.com/fluidattacks/asserts:builder
  stage: test
  script:
    - scons bandit
  retry: 2
  except:
    - master
    - schedules

test:
  image: registry.gitlab.com/fluidattacks/asserts:builder
  stage: test
  script:
    - scons test
  retry: 2
  except:
    - schedules

fluidasserts:
  before_script:
    - mkdir -p /tmp${CI_PROJECT_DIR}/${CI_COMMIT_SHA}
    - cp -a ${CI_PROJECT_DIR} /tmp${CI_PROJECT_DIR}/${CI_COMMIT_SHA}/src
  script:
    - docker pull fluidattacks/asserts
    - docker run -t -e FA_STRICT="false" -w /code
      -v /tmp${CI_PROJECT_DIR}/${CI_COMMIT_SHA}/src:/code
      fluidattacks/asserts asserts -o /code/deploy/container/exploit.py
  after_script:
    - rm -rf /tmp${CI_PROJECT_DIR}/${CI_COMMIT_SHA}
  except:
    - master
    - schedules

mr-test:
  image: registry.gitlab.com/fluidattacks/asserts:builder
  stage: mr-check
  variables:
    GIT_STRATEGY: clone
  script:
    - ./ci-scripts/check-branch.sh
  only:
    - merge_requests

danger:
  image: starefossen/ruby-node:2-10
  stage: mr-check
  variables:
    DANGER_GITLAB_API_TOKEN: ${DANGER_TOKEN}
    DANGER_GITLAB_HOST: "gitlab.com"
    DANGER_GITLAB_API_BASE_URL: "https://gitlab.com/api/v4"
  before_script:
    - export CI_MERGE_REQUEST_ID=$(git ls-remote -q origin merge-requests\*\head
      | grep ${CI_COMMIT_SHA}
      | sed 's/.*refs\/merge-requests\/\([0-9]*\)\/head/\1/g')
    - npm install
    - bundle install
  script:
    - bundle exec danger --verbose
  only:
    - merge_requests

deploy:
  image: registry.gitlab.com/fluidattacks/asserts:builder
  stage: deploy
  script:
    - scons dist
    - scons deploy
    - mkdir -p dist && cp -a build/dist/*.zip dist/
    - docker build --no-cache -f Dockerfile.runner
      -t registry.gitlab.com/fluidattacks/asserts:runner .
  retry: 2
  only:
    - master
  except:
    - schedules

create_installer:
  image: registry.gitlab.com/fluidattacks/asserts:builder
  stage: deploy
  script:
    - scons dist
    - python3 deploy/download.py 2> /dev/null
  retry: 2
  artifacts:
    name: "fluidasserts_${CI_COMMIT_SHA:0:8}"
    paths:
      - deploy/installer/
  only:
    - master
  except:
    - schedules

push_container:
  stage: postdeploy
  script:
    - docker login fluid-docker.jfrog.io -u $JFROG_USER -p $JFROG_PASS
    - docker login -u $HUB_USER -p $HUB_PASS
    - docker push registry.gitlab.com/fluidattacks/asserts:builder
    - docker push registry.gitlab.com/fluidattacks/asserts:runner
    - docker tag registry.gitlab.com/fluidattacks/asserts:runner
      fluidattacks/asserts
    - docker push fluidattacks/asserts
  retry: 2
  only:
    - master
  except:
    - schedules

pages:
  image: registry.gitlab.com/fluidattacks/asserts:builder
  stage: deploy
  script:
    - scons sphinxdoc
  artifacts:
    paths: [public/]
  only:
    - master
  except:
    - schedules

remove-branches:
  image: registry.gitlab.com/fluidattacks/asserts:builder
  stage: remove-branches
  variables:
    GIT_STRATEGY: fetch
  script:
    - url_host=$(git remote get-url origin
      | sed -e "s/https:\/\/gitlab-ci-token:.*@//g")
    - git remote set-url origin "https://gitlab-ci-token:${API_TKN}@${url_host}"
    - ./ci-scripts/remove-branches.sh
  only:
    - schedules
