---

image: registry.gitlab.com/fluidattacks/asserts:base

variables:
  DOCKER_DRIVER: overlay2

services:
  - docker:dind

before_script:
  - docker login registry.gitlab.com -u $DOCKER_USER -p $DOCKER_PASS
  - docker build
    --cache-from registry.gitlab.com/fluidattacks/asserts:base
    -f Dockerfile.base -t registry.gitlab.com/fluidattacks/asserts:base .

stages:
  - build
  - test
  - deploy
  - postdeploy
  - cleanup
  - remove-branches

build:
  stage: build
  before_script:
    - mkdir -p /tmp${CI_PROJECT_DIR}/${CI_COMMIT_SHA}
    - cp -a ${CI_PROJECT_DIR} /tmp${CI_PROJECT_DIR}/${CI_COMMIT_SHA}/src
  script:
    - docker build
      --cache-from registry.gitlab.com/fluidattacks/asserts:builder
      -f Dockerfile.builder -t registry.gitlab.com/fluidattacks/asserts:builder .
  retry: 2

lint:
  stage: test
  script:
    - docker-compose run lint
    - docker-compose run overcommit
  retry: 2
  except:
    - master
    - schedules

bandit:
  stage: test
  script:
    - docker-compose run bandit
  retry: 2
  except:
    - master
    - schedules

test:
  stage: test
  script:
    - docker-compose run test
  retry: 2
  except:
    - schedules

fluidasserts:
  script:
    - docker pull fluidattacks/asserts
    - docker run -t -e FA_STRICT="false" -w /code
      -v /tmp${CI_PROJECT_DIR}/${CI_COMMIT_SHA}/src:/code
      fluidattacks/asserts asserts -o /code/deploy/container/exploit.py
  except:
    - master
    - schedules

deploy:
  stage: deploy
  variables:
    SRC: /tmp${CI_PROJECT_DIR}/${CI_COMMIT_SHA}/src
  script:
    - docker-compose run deploy
    - mkdir -p dist && cp -a ${SRC}/build/dist/*.zip dist/
    - docker build --no-cache -f Dockerfile.runner
      -t registry.gitlab.com/fluidattacks/asserts:runner .
  retry: 2
  only:
    - master
  except:
    - schedules

create_installer:
  image: registry.gitlab.com/fluidattacks/asserts:builder
  stage: deploy
  variables:
    SRC: /tmp${CI_PROJECT_DIR}/${CI_COMMIT_SHA}/src
  script:
    - python3 ${SRC}/deploy/download.py 2> /dev/null
  retry: 2
  artifacts:
    name: "fluidasserts_${CI_COMMIT_SHA:0:8}"
    paths:
      - deploy/installer/
  only:
    - master
  except:
    - schedules

push_container:
  stage: postdeploy
  script:
    - docker login fluid-docker.jfrog.io -u $JFROG_USER -p $JFROG_PASS
    - docker login -u $HUB_USER -p $HUB_PASS
    - docker push registry.gitlab.com/fluidattacks/asserts:base
    - docker push registry.gitlab.com/fluidattacks/asserts:builder
    - docker push registry.gitlab.com/fluidattacks/asserts:runner
    - docker tag registry.gitlab.com/fluidattacks/asserts:runner
      fluidattacks/asserts
    - docker push fluidattacks/asserts
  after_script:
    - rm -rf /tmp${CI_PROJECT_DIR}/${CI_COMMIT_SHA}
  retry: 2
  only:
    - master
  except:
    - schedules

pages:
  image: registry.gitlab.com/fluidattacks/asserts:builder
  stage: deploy
  script:
    - scons sphinxdoc
  artifacts:
    paths: [public/]
  only:
    - master
  except:
    - schedules

cleanup_job:
  stage: cleanup
  script:
    - rm -rf /tmp${CI_PROJECT_DIR}/${CI_COMMIT_SHA}
  when: always
  except:
    - schedules

remove-branches:
  image: registry.gitlab.com/fluidattacks/asserts:builder
  stage: remove-branches
  variables:
    GIT_STRATEGY: fetch
  script:
    - url_host=$(git remote get-url origin
      | sed -e "s/https:\/\/gitlab-ci-token:.*@//g")
    - git remote set-url origin "https://gitlab-ci-token:${API_TKN}@${url_host}"
    - ./remove-branches.sh
  only:
    - schedules
