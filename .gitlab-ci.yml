---

image: registry.gitlab.com/fluidsignal/asserts:base

variables:
  DOCKER_DRIVER: overlay2

services:
  - docker:dind

before_script:
  - docker login registry.gitlab.com -u $DOCKER_USER -p $DOCKER_PASS
  - docker build
    --cache-from registry.gitlab.com/fluidsignal/asserts:base
    -f Dockerfile.base -t registry.gitlab.com/fluidsignal/asserts:base .

stages:
  - build
  - test
  - deploy
  - postdeploy

build:
  stage: build
  before_script:
    - mkdir -p /tmp${CI_PROJECT_DIR}/${CI_COMMIT_REF_NAME}
    - cp -r $PWD /tmp${CI_PROJECT_DIR}/${CI_COMMIT_REF_NAME}/src
  script:
    - docker build
      --cache-from registry.gitlab.com/fluidsignal/asserts:builder
      -f Dockerfile.builder -t registry.gitlab.com/fluidsignal/asserts:builder .
  retry: 2

lint:
  stage: test
  script:
    - docker-compose run lint
    - docker-compose run overcommit
  retry: 2

test:
  stage: test
  script:
    - docker-compose run test
  retry: 2

fluidasserts:
  script:
    - docker login fluid-docker.jfrog.io -u $JFROG_USER -p $JFROG_PASS
    - docker pull fluid-docker.jfrog.io/$ORG:$APP
    - docker run -e ORG=$ORG -e APP=$APP -e USER=$JFROG_USER -e PASS=$JFROG_PASS
      -e FA_STRICT="false"
      -v /tmp${CI_PROJECT_DIR}/${CI_COMMIT_REF_NAME}/src:/code
      fluid-docker.jfrog.io/$ORG:$APP

codequality:
  image: docker:latest
  variables:
    DOCKER_DRIVER: overlay
  services:
    - docker:dind
  script:
    - export SP_VERSION=$(echo "$CI_SERVER_VERSION" |
        sed 's/^\([0-9]*\)\.\([0-9]*\).*/\1-\2-stable/')
    - docker run
      --env SOURCE_CODE="/tmp${CI_PROJECT_DIR}/${CI_COMMIT_REF_NAME}/src"
      -v /tmp${CI_PROJECT_DIR}/${CI_COMMIT_REF_NAME}/src:/code
      -v /var/run/docker.sock:/var/run/docker.sock
      codeclimate/codeclimate
      analyze -e sonar-python -e pep8 -e randon -f json > codeclimate.json || true
  retry: 2
  artifacts:
    paths: [codeclimate.json]

deploy:
  stage: deploy
  script:
    - docker-compose run deploy
    - docker build --no-cache --build-arg jfrog_user=$JFROG_USER
      --build-arg jfrog_pass=$JFROG_PASS -f Dockerfile.runner
      -t registry.gitlab.com/fluidsignal/asserts:runner .
  retry: 2
  only:
    - master

push_container:
  stage: postdeploy
  script:
    - docker push registry.gitlab.com/fluidsignal/asserts:dev
    - docker tag registry.gitlab.com/fluidsignal/asserts:dev
      registry.gitlab.com/fluidsignal/asserts:master
    - docker push registry.gitlab.com/fluidsignal/asserts:master
    - docker push registry.gitlab.com/fluidsignal/asserts:base
    - docker push registry.gitlab.com/fluidsignal/asserts:builder
    - docker push registry.gitlab.com/fluidsignal/asserts:runner
  after_script:
    - rm -rf /tmp${CI_PROJECT_DIR}
  retry: 2
  only:
    - master

pages:
  image: registry.gitlab.com/fluidsignal/asserts:dev
  stage: deploy
  script:
    - mkdir -p public/
    - scons sphinxdoc
  artifacts:
    paths: [public/]
  only:
    - master
