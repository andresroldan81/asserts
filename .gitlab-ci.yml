image: docker:latest

variables:
  DOCKER_DRIVER: overlay2

services:
- docker:dind

before_script:
    - sudo apt-get update -qq
    - sudo apt-get install -y python3 python3-dev python-dev libssl-dev libffi-dev scons python-virtualenv sed curl grep gawk lsb-release
    - sudo apt-get install -y python-pip python3-pip python-setuptools python3-setuptools
    - sudo pip install -U tox tox-pyenv flake8 pylint yamllint twine certifi ansible wheel colorama mandrill
    - sudo docker -D login -u $DOCKER_USER -p $DOCKER_PASS
    - sudo docker -D pull fluidsignal/fluidasserts:container

codequality:
  image: docker:latest
  variables:
    DOCKER_DRIVER: overlay
  services:
    - docker:dind
  script:
    - docker pull codeclimate/codeclimate
    - docker run --env CODECLIMATE_CODE="$PWD" --volume "$PWD":/code --volume /var/run/docker.sock:/var/run/docker.sock --volume /tmp/cc:/tmp/cc codeclimate/codeclimate init
    - docker run --env CODECLIMATE_CODE="$PWD" --volume "$PWD":/code --volume /var/run/docker.sock:/var/run/docker.sock --volume /tmp/cc:/tmp/cc codeclimate/codeclimate analyze -f json > codeclimate.json
  artifacts:
    paths: [codeclimate.json]

stages:
    - build
    - test
    - deploy

build:
    stage: build
    script:
        - scons deps

test:
    stage: test
    script:
        - scons self
        - scons smoke
        - scons test

deploy:
    stage: deploy
    script:
        - echo $VAULT > ~/.vault.txt
        - cp conf/dotpypirc ~/.pypirc
        - ansible-vault --vault-password-file ~/.vault.txt decrypt ~/.pypirc
        - scons dist
        - twine upload build/dist/*.whl || python setup.py sdist bdist_wheel upload;
        - python src/utils/send_mail.py
    only:
    - master

