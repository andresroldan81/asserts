import requests
import sys
from requests.auth import HTTPBasicAuth
import warnings
warnings.filterwarnings("ignore")
url = sys.argv[1]
cookie = "JSESSIONID=5168A6E742B2B5C2B9C247018542AF7D; COOKIE_SUPPORT=true; GUEST_LANGUAGE_ID=en_US; LFR_SESSION_STATE_184367=1465329790423"

headers = {
			"Host": "connectmilesqa.seven4n.com",
			"User-Agent": "Mozilla/5.0 (X11; Linux i686; rv:38.0) Gecko/20100101 Firefox/38.0 Iceweasel/38.7.1",
			"Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8",
			"Accept-Language": "en-US,en;q=0.5",
			"Accept-Encoding": "gzip, deflate",
			"Cookie": cookie,
			"Connection": "keep-alive",
			"Cache-control":"max-age=0",
			"Content-Type": "text/html;charset=UTF-8"
		  }

https = url.split(":")[0]
x = requests.get(url, auth=HTTPBasicAuth('usuariocopa', 'Prueba123'), headers=headers, verify=False)
if "https" in https:
	if "strict-transport-security" not in x.headers:
		print ("Falta la cabecera: Strict-Transport-Security")
if 'Public-Key-Pins' not in x.headers:
	print ("Falta Cabecera Public-Key-Pins")
if 'X-Frame-Options' not in x.headers:
	print ("Falta Cabecera X-Frame-Options")
if 'X-XSS-Protection' not in x.headers:
	print ("Falta Cabecera X-XSS-Protection")
if 'X-Content-Type-Options' not in x.headers:
	print ("Falta Cabecera X-Content-Type-Options")
if 'Content-Security-Policy' not in x.headers:
	print ("Falta Cabecera Content-Security-Policy")
