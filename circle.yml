---
#
# Archivo de configuracion del servicio de integraciÃ³n continua.
#

version: 2
jobs:
  build:
    working_directory: /tmp/fluid-asserts
    machine: true
    steps:
      # Deps first
      - checkout
      - run: sudo docker -D login -u $DOCKER_USER -p $DOCKER_PASS -e $DOCKER_EMAIL
      - run: sudo docker -D pull fluidsignal/fluidasserts:container
      - run: sudo apt-get update
      - run: sudo apt-get -y install python3 python3-dev python-dev libssl-dev libffi-dev scons python-virtualenv
      - run: sudo apt-get -y install python-pip python3-pip python-setuptools python3-setuptools
      - run: pip install --upgrade --force pip setuptools
      - run: sudo apt-get -y purge python-setuptools python3-setuptools python-pip python3-pip
      - run: pyenv install 2.7.11 --skip-existing
      - run: pyenv install 3.4.3 --skip-existing
      - run: pyenv install 3.5.2 --skip-existing
      - run: pyenv global 2.7.11 3.4.3 3.5.2
      - run: pip install tox tox-pyenv flake8 pylint yamllint twine certifi ansible wheel
      - run: echo $VAULT > ~/.vault.txt
      - run: gem install overcommit
      - run: scons deps
      - run: scons self
      - run: scons smoke

      # Tests
      - run: scons lint
      - run: overcommit --sign
      - run: overcommit --run
      - run: scons test
      - run: scons dist
      - run: scons doc
      - run: cp conf/dotpypirc ~/.pypirc
      - run: ansible-vault --vault-password-file ~/.vault.txt decrypt ~/.pypirc

      # Deploy
      - deploy:
          command: |
            if [[ $CIRCLE_BRANCH == "master" ]]; then
                python setup.py sdist bdist_wheel;
            fi
      - deploy:
          command: |
            if [[ $CIRCLE_BRANCH == "master" ]]; then
                twine upload build/dist/*.whl || python setup.py sdist bdist_wheel upload;
            fi
        #- run: cp build/test/results.* $CIRCLE_TEST_REPORTS
        #- run: cp -r build/coverage $CIRCLE_ARTIFACTS
        #- run: cp -r build/lint $CIRCLE_ARTIFACTS
        #- run: cp -r build/doc $CIRCLE_ARTIFACTS
        #- run: cp -r build/dist $CIRCLE_ARTIFACTS
