---
#
# Archivo de configuracion del servicio de integraciÃ³n continua.
#

version: 2
jobs:
  build:
    working_directory: /tmp/fluid-asserts
    docker:
      - image: ubuntu:14.04
      - image: python:2.7.13
    steps:
      # Deps first
      - run: apt-get -qq update; apt-get -y install git
      - checkout
      - run: pip install --upgrade pip setuptools
      - run: echo "deb https://download.docker.com/linux/ubuntu trusty stable" >> /etc/apt/sources.list.d/docker.list
      - run: curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -
      - run: sudo apt-get update
      - run: apt-get -y install python-pip python3-pip docker-ce ruby2.0 ruby2.0-dev
      - run: docker -D login -u $DOCKER_USER -p $DOCKER_PASS -e $DOCKER_EMAIL
      - run: echo $VAULT > ~/.vault.txt
      - run: gem install overcommit
      - run: pip install tox tox-pyenv flake8 pylint yamllint \
                twine setupext-gitversion certifi ansible scons
      - run: docker -D pull fluidsignal/fluidasserts:container
      - run: scons deps
      - run: cp conf/dotpypirc ~/.pypirc
      - run: ansible-vault --vault-password-file ~/.vault.txt decrypt ~/.pypirc
      - run: scons self
      - run: scons smoke

      # Tests
      - run: scons lint
      - run: overcommit --sign
      - run: overcommit --run
      - run: scons test
      - run: scons dist
      - run: scons doc
      - run: cp build/test/results.* $CIRCLE_TEST_REPORTS
      - run: cp -r build/coverage $CIRCLE_ARTIFACTS
      - run: cp -r build/lint $CIRCLE_ARTIFACTS
      - run: cp -r build/doc $CIRCLE_ARTIFACTS
      - run: cp -r build/dist $CIRCLE_ARTIFACTS
      - run: if [[ $CIRCLE_BRANCH == "master" ]] ; then \
                python setup.py sdist bdist_wheel upload; \
                fi
