* Para a침adir nuevos modulos de soporte el formato es el siguiente:

   * fluidasserts/{formato}.py
   * fluidasserts/{protocolo}.py

Ejemplo:

   * touch fluidasserts/js.py
   * touch fluidasserts/html.py
   * touch fluidasserts/smtp.py
   * touch fluidasserts/ftp.py
   * touch fluidasserts/snmp.py

Dentro de cada modulo correspondiente se deben crear funciones tipo predicado,
es decir que hagan una pregunta que se responda verdadero o falso.  Ejemplos:

   * has_XXXX?
   * is_open?
   * is_close?
   * contains_XXX?

Los metodos al ser predicados siempre deben retornar True o False:

   * True si la vulnerabilidad esta abierta
   * False si la vulnerabilidad esta cerrada
   * True debe ser el valor por defecto de retorno ante cualquier duda

Siempre el nombre de las funciones debe ser en ingles y seguir la convencion
de nombres de python.  De esta forma desde un proyecto se podra usar asi:

from fluidasserts import js
js.is_obfuscated('Admin.js')

Notese que el metodo solo debe preocuparse por el formato del archivo, no
por su ubicaci칩n, pues de esto se encargaran los decoradores.

Los decoradores son funciones que permiten separar la logica de la ubicaci칩n
de la logica de verificaci칩n de un formato.  La idea inicial es la siguiente:

@http_location('http://www.holacomoestas.com/ruta/')
js.is_obfuscated('Admin.js')

Esta estructura verificara si el archivo Admin.js esta ofuscado independiente
de donde este almacenado.  Asi por ejemplo si el archivo JS esta en un FTP,
solo debemos crear un decorador sin afectar la funcion js.is_obfuscated:

@ftp_location(10.1.1.1, '/hola/')
js.is_obfuscated('Admin.js')

Si por ejemplo el archivo esta en una carpeta compartida de Windows, solo
debemos crear el decorador:

@smb_location ....










javascript module
js.is_obfuscated('Admin.js')

html module
using elementtree
http://stackoverflow.com/questions/8692/how-to-use-xpath-in-python
http://effbot.org/zone/element-xpath.htm
html.no_autocomplete('Archivo.html', 'dom.location.dsdf.sd.fdf')

ssl module or x509 module?
using twisted
http://stackoverflow.com/questions/1087227/validate-ssl-certificates-with-python
http://stackoverflow.com/questions/16899247/how-can-i-decode-a-ssl-certificate-using-python
http://pyopenssl.sourceforge.net/pyOpenSSL.html/openssl-x509.html
https://www.sslshopper.com/ssl-checker.html#hostname=https://fluid.la
ssl.is_self_signed()
ssl.has_expired()
ssl.expires_soon(asdsd, days)
ssl.resolved_accordinly

http module
pruebas asimetricas
http.response_is_stable(seconds, URL, repeat)

tcp.is_open(ip, port)

ssh module
ssh.has_advisory()
ssh.is_open()
ssh.

ldap module
ldap.is_open(ip)
ldap.supports_anonymous_connection()

ftp module
ftp.is_open(ip)
ftp.supports_anonymous_connection(ip)

smtp module
smtp.is_open()
smtp.supports_anonymous_connection(ip)

dns module
dns.is_open()
dns.zone_transfer()
dns.cache_snoop_enabled()

voip??



